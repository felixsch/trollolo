From 61377a39c03d25223e19ce94c4c2ccd2f1b7875a Mon Sep 17 00:00:00 2001
From: Felix Schnizlein <felix@none.io>
Date: Wed, 23 Sep 2015 12:07:11 +0200
Subject: [PATCH] Automatically switch to new sprint if needed

---
 lib/burndown_chart.rb            | 24 ++++++++++++++++++++
 lib/burndown_data.rb             |  2 +-
 lib/cli.rb                       |  3 +++
 lib/scrum_board.rb               | 12 +++++++---
 spec/unit/burndown_chart_spec.rb | 47 ++++++++++++++++++++++++++++++++++++++++
 5 files changed, 84 insertions(+), 4 deletions(-)

diff --git a/lib/burndown_chart.rb b/lib/burndown_chart.rb
index efe25c8..3fe093e 100644
--- a/lib/burndown_chart.rb
+++ b/lib/burndown_chart.rb
@@ -129,6 +129,29 @@ class BurndownChart
       system "python #{plot_helper} #{sprint_number} #{cli_switches.join(' ')}"
     end
 
+    def new_sprint_started?(settings, dir)
+      # get local current sprint number
+      cur = 0
+      sprint_file = Dir.glob("#{dir}/burndown-data-*.yaml").max_by do |file|
+        n = file.match(/burndown-data-(.*).yaml/).captures.first.to_i
+        cur = n if n > cur
+        n
+      end
+      # load file
+      begin
+        sprint = YAML.load_file(sprint_file)
+      rescue SyntaxError, SystemCallError => e
+        raise Trollolo.new("Loading #{sprint_file} failed: #{e.message}")
+      end
+      # current sprint on trello board
+      trello = TrelloWrapper.new(settings).board(sprint['meta']['board_id'])
+      if cur < trello.current_sprint
+        puts "A new sprint was started #{cur} -> #{trello.current_sprint}"
+        return true
+      end
+      return false
+    end
+
     private
 
     def process_options(hash)
@@ -172,6 +195,7 @@ class BurndownChart
     @burndown_data.fetch
     add_data(@burndown_data)
     write_data burndown_data_path
+
     if options[:plot]
       BurndownChart.plot(self.sprint, options)
     end
diff --git a/lib/burndown_data.rb b/lib/burndown_data.rb
index a6e8657..852260e 100644
--- a/lib/burndown_data.rb
+++ b/lib/burndown_data.rb
@@ -105,7 +105,7 @@ class BurndownData
     return unless meta_cards.any?
     current_sprint_meta_card = meta_cards.max_by(&:sprint_number)
     @meta = Card.parse_yaml_from_description(current_sprint_meta_card.desc) || {}
-    @meta['sprint'] = current_sprint_meta_card.sprint_number
+    @meta['sprint'] = board.current_sprint
   end
 
 end
diff --git a/lib/cli.rb b/lib/cli.rb
index 7e80efe..e8adf0c 100644
--- a/lib/cli.rb
+++ b/lib/cli.rb
@@ -294,6 +294,9 @@ EOT
       if options[:new_sprint]
         chart.create_next_sprint(options[:output] || Dir.pwd)
       end
+      if BurndownChart.new_sprint_started?(@@settings, (options[:output] || Dir.pwd))
+        chart.create_next_sprint(options[:output] || Dir.pwd)
+      end
       chart.update(options)
       puts "Updated data for sprint #{chart.sprint}"
     rescue TrolloloError => e
diff --git a/lib/scrum_board.rb b/lib/scrum_board.rb
index c9317b7..1357d7f 100644
--- a/lib/scrum_board.rb
+++ b/lib/scrum_board.rb
@@ -3,7 +3,7 @@ class ScrumBoard
   class DoneColumnNotFoundError < StandardError; end
 
   def initialize(board_data, settings)
-    @settings = settings
+    @settings   = settings
     @board_data = board_data
   end
 
@@ -11,13 +11,19 @@ class ScrumBoard
     @columns ||= @board_data["lists"].map{|x| Column.new(@board_data, x["id"])}
   end
 
+  def current_sprint
+    done_column.name.match(@settings.done_column_name_regex).captures.first.to_i
+  end
+
   def done_column
     begin
       done_columns = columns.select{|c| c.name =~ @settings.done_column_name_regex }
       if done_columns.empty?
         raise DoneColumnNotFoundError, "can't find done column by name regex #{@settings.done_column_name_regex}"
-      else
-        done_columns.max_by{|c| c.name.match(@settings.done_column_name_regex).captures.first.to_i }
+        return
+      end
+      done_columns.max_by do |c|
+        c.name.match(@settings.done_column_name_regex).captures.first.to_i
       end
     end
   end
diff --git a/spec/unit/burndown_chart_spec.rb b/spec/unit/burndown_chart_spec.rb
index 3bd92aa..eab9fe9 100644
--- a/spec/unit/burndown_chart_spec.rb
+++ b/spec/unit/burndown_chart_spec.rb
@@ -346,6 +346,53 @@ EOT
     end
   end
 
+  describe '.new_sprint_started?' do
+
+    let(:test_dir) { '/test/burndown' }
+    let(:test_sprint_files) do
+      [ "#{test_dir}/burndown-data-08.yaml",
+        "#{test_dir}/burndown-data-09.yaml",
+        "#{test_dir}/burndown-data-10.yaml",
+        "#{test_dir}/burndown-data-11.yaml" ]
+    end
+
+    let(:test_settings) {}
+      
+    it 'check if a new newer online sprint results in true' do
+      test_sprint_file = { 'meta' => { 'board_id' => 'foo', 'sprint' => 11 } }
+
+      expect(Dir).to receive(:glob).with("#{test_dir}/burndown-data-*.yaml").and_return(test_sprint_files)
+      expect(YAML).to receive(:load_file).with(test_sprint_files.last).and_return(test_sprint_file)
+
+      scrum_board = double
+      expect(scrum_board).to receive(:current_sprint).twice.and_return(12)
+
+      trello = double
+      expect(trello).to receive(:board).and_return(scrum_board)
+
+      expect(TrelloWrapper).to receive(:new).with(test_settings).and_return(trello)
+
+      expect(described_class.new_sprint_started?(test_settings, test_dir)).to eq(true)
+    end
+
+    it 'check if a older, equal sprint results in false' do
+      test_sprint_file = { 'meta' => { 'board_id' => 'foo', 'sprint' => 11 } }
+
+      expect(Dir).to receive(:glob).with("#{test_dir}/burndown-data-*.yaml").and_return(test_sprint_files)
+      expect(YAML).to receive(:load_file).with(test_sprint_files.last).and_return(test_sprint_file)
+
+      scrum_board = double
+      expect(scrum_board).to receive(:current_sprint).and_return(11)
+
+      trello = double
+      expect(trello).to receive(:board).and_return(scrum_board)
+
+      expect(TrelloWrapper).to receive(:new).with(test_settings).and_return(trello)
+
+      expect(described_class.new_sprint_started?(test_settings, test_dir)).to eq(false)
+    end
+  end
+
   describe '.plot' do
 
     it 'sends joined parsed options to python script' do
-- 
2.1.4

